{
    "openapi": "3.0.0",
    "info": {
        "version": "0.3.0",
        "title": "SignalK Racing Calculator API",
        "description": "API endpoints exposed by SignalK Racing Calculator to support application functionality.",
        "termsOfService": "http://signalk.org/terms/",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "externalDocs": {
        "url": "http://signalk.org/specification/",
        "description": "Signal K specification."
    },
    "servers": [
        {
            "url": "/signalk/v1/api/vessels/self/racing"
        }
    ],
    "tags": [
        {
            "name": "Race Timer",
            "description": "Start and clear the race timer."
        },
        {
            "name": "Start Line",
            "description": "Set the start line."
        },
        {
            "name": "Race Course",
            "description": "Select one of the pre-defined race courses and move through it."
        }
    ],
    "components": {
        "responses": {
            "200OKResponse": {
                "description": "Successful operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "Request success response",
                            "properties": {
                                "state": {
                                    "type": "string",
                                    "enum": [
                                        "COMPLETED"
                                    ]
                                },
                                "statusCode": {
                                    "type": "number",
                                    "enum": [
                                        200
                                    ]
                                }
                            },
                            "required": [
                                "state",
                                "statusCode"
                            ]
                        }
                    }
                }
            },
            "ErrorResponse": {
                "description": "Failed operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "Request error response",
                            "properties": {
                                "state": {
                                    "type": "string",
                                    "enum": [
                                        "FAILED"
                                    ]
                                },
                                "statusCode": {
                                    "type": "number",
                                    "enum": [
                                        404
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "state",
                                "statusCode",
                                "message"
                            ]
                        }
                    }
                }
            }
        },
        "parameters": {
            "StationIdParam": {
                "in": "path",
                "required": true,
                "name": "id",
                "description": "Weather station identifier.",
                "schema": {
                    "type": "string",
                    "enum": [
                        "freeboard-sk"
                    ]
                }
            },
            "EntryIdParam": {
                "in": "path",
                "required": true,
                "name": "entryId",
                "description": "Forecast entry identifier.",
                "schema": {
                    "type": "number"
                }
            },
            "AlarmTypeParam": {
                "in": "path",
                "required": true,
                "name": "alarmType",
                "description": "Alarm identifier.",
                "schema": {
                    "type": "string",
                    "enum": [
                        "mob",
                        "fire",
                        "sinking",
                        "flooding",
                        "collision",
                        "grounding",
                        "listing",
                        "adrift",
                        "piracy",
                        "abandon"
                    ]
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "JAUTHENTICATION"
            }
        }
    },
    "paths": {
        "/startCountdown": {
            "put": {
                "tags": [
                    "Race Timer"
                ],
                "summary": "Start the race countdown for the specified number of seconds.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "number",
                                        "description": "Number of seconds to set the countdown for.",
                                        "example": 300
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "$ref": "#/components/responses/200OKResponse"
                    }
                }
            }
        },
        "/cancelRace": {
            "put": {
                "tags": [
                    "Race Timer"
                ],
                "summary": "Cancel the race countdown and reset race status.",
                "responses": {
                    "default": {
                        "$ref": "#/components/responses/200OKResponse"
                    }
                }
            }
        },
        "/pingBoat": {
            "put": {
                "tags": [
                    "Start Line"
                ],
                "summary": "Set the boat side of the start line to the current position.",
                "responses": {
                    "default": {
                        "$ref": "#/components/responses/200OKResponse"
                    }
                }
            }
        },
        "/pingPin": {
            "put": {
                "tags": [
                    "Start Line"
                ],
                "summary": "Set the pin side of the start line to the current position.",
                "responses": {
                    "default": {
                        "$ref": "#/components/responses/200OKResponse"
                    }
                }
            }
        },
        "/selectCourse": {
            "put": {
                "tags": [
                    "Race Course"
                ],
                "summary": "Select the specified race course by name.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "description": "Course name from among the pre-defined courses",
                                        "example": "4S"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "$ref": "#/components/responses/200OKResponse"
                    }
                }
            }
        },
        "/nextWaypoint": {
            "put": {
                "tags": [
                    "Race Course"
                ],
                "summary": "Set the pin side of the start line to the current position.",
                "responses": {
                    "default": {
                        "$ref": "#/components/responses/200OKResponse"
                    }
                }
            }
        }
    }
}